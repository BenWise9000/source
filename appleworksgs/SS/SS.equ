;------------------------------------------;; Global Equates;;------------------------------------------S_MagNum1			equ		-6			; I forgot where it was usedS_NormalPen		equ		$00020001S_ThickPen		equ		$00020002S_RowHeight		equ		10S_EditHeight		equ		12S_EditWidth		equ		640			; not really used yetS_TextOffset		equ		9S_ColLabelHeight	equ		S_RowHeight+1S_NumLabelWidth	equ		52			; was 80S_NumLabOffset		equ		8			; was 30S_DefaultColWd		equ		80S_MaxCellWidth		equ		500S_MinCellWidth		equ		16S_GrowHeight		equ		10S_GrowWidth		equ		25S_RSRefCon		equ		0S_BSRefCon		equ		1S_GrowRefCon		equ		2S_RDataSize		equ		10000		; hex -> $270FS_BDataSize		equ		702			; hex -> $02BES_BViewSize		equ		1S_DefDefFormat		equ		$00020300S_ColWdStructSize	equ		704;   These are the different message types SS can receiveS_ColWidthMsg		equ		$0200S_BreakLinkMsg		equ		$5200S_BreakGraphLink	equ		$2500		; these go to the graph moduleS_ChartMsg		equ		$2501;   These bits are used in the CurEditFlagS_EditingBit		equ		1S_BRMostBit		equ		2			; bit on means I dont know BRMostS_ViewFormulaBit	equ		4S_ManCalcBit		equ		8S_GridOff			equ		16S_KeysInactive		equ		32;   This bit is used temporarily in fixing dependency formulas;             (see S_FixFormula,S_FixFormula2,S_SwapCell)S_RecentlyChangedBit	equ		$40S_RecentlyChangedBit2	equ		$20;   Definition of a Key structureS_KeyMin			equ		2S_KeyMax			equ		4S_KeyArray		equ		6S_KeyStructDefault	equ		8S_KeySize			equ		2S_KeyIndexSize		equ		4S_KeyStructSize	equ		0			; word (point to RowCells)S_KeyMap			equ		2			; variable (words)S_KeyIndices		equ		4			; def    variable (longs)S_NotACell		equ		$7FFF7FFF		; *** Driver Equate ***S_EndOfList		equ		-1;   Definition of a Cell structureS_CellStructSize	equ		36S_CellID			equ		0			; longS_CellFormat		equ		4			; long                   Driver EquateS_CellValue		equ		8			; 10 bytes, floating pt  Driver EquateS_CellPriority		equ		18			; wordS_CellDependOnMe	equ		20			; longS_CellContent		equ		24			; longS_CellNext		equ		28			; longS_CellPrevious		equ		32			; long;    Format, lower wordS_CellType		equ		$E000S_CellPercent		equ		$1000S_CellComma		equ		$0800S_CellDollar		equ		$0400S_CellRedNeg		equ		$0200S_CellParenNeg		equ		$0100S_CellSciNote		equ		$0080S_CellFixed		equ		$0040S_CellInvalid		equ		$0020		; 0 = Valid,     1 = Invalid  Driver			equ		S_CellError		equ		$0010		; 0 = Not Avail, 1 = Error    Driver			equ		S_CellBold		equ		$0008S_CellULine		equ		$0004S_CellJustify		equ		$0003;    Format, upper wordS_CellProtect			equ		$8000S_CellInPath			equ		$0080	; for circularity checkingS_CellVisited			equ		$0040	;  '       '          "S_CellCircular			equ		$0020	;  '       '          ";   S_CellInRecalcList	equ		$0010S_CellDecPlace			equ		$000FS_CellTypeText		equ		$0000S_CellTypeValue	equ		$2000		; *** Driver Equate ***S_CellTypeTextForm	equ		$4000		; text formulaS_CellTypeFormula	equ		$6000		; value formulaS_CellTypeLeftPad	equ		$8000S_CellTypeRightPad	equ		$A000S_CellTypeEmpty	equ		$E000S_CellLeftJustify	equ		$0000S_CellRightJustify	equ		$0001S_CellCenterJustify	equ		$0002;   Definition of DependOnMe stuctureS_DependStructSize	equ		12S_DependInc		equ		4S_DependSize		equ		0			; long ( size of both lists)S_DependRangeList	equ		4			; long (ptr to list start)S_DependList		equ		8			; variable length (list start);   Definition of Scrap structureS_ScrapRows		equ		0S_ScrapCols		equ		2S_ScrapParseCode	equ		4S_ScrapSize		equ		6S_ScrapCells		equ		10S_ScrapCellLoc		equ		0S_ScrapCellSize	equ		4S_ScrapFormat		equ		6S_ScrapValueSize	equ		10S_ScrapValue		equ		11S_ScrapValFormula	equ		21;   Definition of File Cell structure;        This is modeled after the scrap structureS_FileRows		equ		0S_FileCols		equ		2S_FileSheetSize	equ		4S_FileSheet		equ		8S_FileCellLoc		equ		0S_FileCellSize		equ		4S_FileFormat		equ		6S_FileValueSize	equ		10S_FileValue		equ		11;	1/10/89;;	This is a list of old File Version numbersS_FileVersion1v1	equ		4			; Release Version 1.0v1S_FileVersion1v2	equ		5			; Release Version 1.0v2S_FileVersion1v3	equ		6			; Release Version 1.0v3;	Theses are the high byte flags that will distinguish the;	entries in the cell table.S_CellTableFlags	equ		$C000S_CellTableList	equ		$4000S_CellTableSingDep	equ		$8000S_CellTableRangeDep	equ		$C000;------------------------------------------;; Equates from procedure S_AttrData;;------------------------------------------S_PasteFormatMI	equ		1<<5S_PasteValueMI		equ		1<<6S_SelectAllMI		equ		1<<7S_InsertMI		equ		1<<8S_DeleteMI		equ		1<<9S_MoveMI			equ		1<<10S_FillMI			equ		1<<11S_TransposeMI		equ		1<<12S_DefaultEdit		equ		%1111111111110S_BoldItem		equ		$401S_UnderlineItem	equ		$402S_AlignLeftItem	equ		$403S_AlignCtrItem		equ		$404S_AlignRightItem	equ		$405S_GeneralItem		equ		$406S_FixedItem		equ		$407S_DollarItem		equ		$408S_PercentItem		equ		$409S_SciNoteItem		equ		$40AS_CommaItem		equ		$40CS_RedNegItem 		equ		$40DS_ParenItem		equ		$40ES_SetDefItem		equ		$40FS_BoldMI			equ		1<<0S_UnderlineMI		equ		1<<1S_AlignLeftMI		equ		1<<2S_AlignCenterMI	equ		1<<3S_AlignRightMI		equ		1<<4S_GeneralMI		equ		1<<5S_FixedMI			equ		1<<6S_DollarSignMI		equ		1<<7S_PercentMI		equ		1<<8S_SciNoteMI		equ		1<<9S_DecimalMI		equ		1<<10S_CommasMI		equ		1<<11S_RedNegNumMI		equ		1<<12S_ParenNegNumMI	equ		1<<13S_SetDefFormatMI	equ		1<<14S_FormatStandard	equ		%0111111111111111S_CalculateItem	equ		$501S_RecalcItem		equ		$502S_ViewItem		equ		$503S_ListFormulasItem	equ		$504S_ChangeDefWdItem	equ		$505S_RestoreWidthItem	equ		$506S_SetTitlesItem	equ		$507S_GridItem		equ		$508S_CalculationMI	equ		1<<0S_RecalcMI		equ		1<<1S_ViewMI			equ		1<<2S_ListFormulasMI	equ		1<<3S_ChangeDefWidthMI	equ		1<<4S_RestoreWidthMI	equ		1<<5S_SetTitlesMI		equ		1<<6S_GridMI			equ		1<<7S_OptionsStandard	equ		1+4+8+16+32+64+128S_GotoItem		equ		$601S_SortItem		equ		$602S_ProtectItem 		equ		$603S_NewChartItem		equ		$604S_ModChartItem		equ		$605S_GotoMI			equ		1<<0S_SortMI			equ		1<<1S_ProtectMI		equ		1<<2S_NewChartMI		equ		1<<3S_ModChartMI		equ		1<<4S_DataStandard		equ		1+2+4+8+16;------------------------------------------;; Equates from procedure S_ChartData;;------------------------------------------S_PieHCtr			equ		150S_PieVCtr			equ		67S_MaxChartCount	equ		100S_MinOp			equ		$1F00S_MaxOp			equ		$1E00S_CSize			equ		70S_CType			equ		0S_CRange			equ		2S_CName			equ		10S_CIsMax			equ		42S_CMax			equ		44S_CMin			equ		54S_SpaceBar		equ		64S_CWind			equ		66S_PieLegendH		equ		320S_PieType			equ		1S_BarType			equ		2S_3DBarType		equ		3S_LineType		equ		4S_PtType			equ		5;------------------------------------------;; Equates from procedure S_UndoData;;------------------------------------------S_UndoColWdType		equ	1S_UndoEntryType		equ	2S_UndoClearType		equ	3S_UndoCutType			equ	4S_UndoPasteType		equ	5S_UndoPasteValuesType	equ	6S_UndoPasteFormatType	equ	7S_UndoFillType			equ	8S_UndoMoveType			equ	9S_UndoDeleteType		equ	10S_UndoInsertType		equ	11S_UndoTransposeType		equ	12S_UndoSortType			equ	13S_UndoImportType		equ	14