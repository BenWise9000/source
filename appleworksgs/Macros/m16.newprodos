;-----------------------------------------------;;   Imported addresses;;-----------------------------------------------; File: M16.ProDos;; StyleWare, Inc.;; New (10/27/87), Stack Version of ProDOS macros.; Usage: (e.g.);			   pushlong paramblock;			   _OPEN;; CLASS 1 string.  MACRO&lab STR1 &string		lclc &sset		&sset	SETC &SETTING('STRING')		STRING ASIS		&lab	DC.W	&len(&string)-2			; eliminate enclosing quotes.		DC.B	&string		STRING &sset  MEND  MACRO&lab _CREATE&lab pea $2001	 jsl $E100B0  MEND  MACRO&lab _DESTROY&lab pea $2002	 jsl $E100B0  MEND  MACRO&lab _OS_ShutDown&lab pea $2003	 jsl $E100B0  MEND  MACRO&lab _CHANGE_PATH&lab pea $2004	 jsl $E100B0  MEND  MACRO&lab _SET_FILE_INFO&lab pea $2005	 jsl $E100B0  MEND  MACRO&lab _GET_FILE_INFO&lab pea $2006	 jsl $E100B0  MEND  MACRO&lab _VOLUME&lab pea $2008	 jsl $E100B0  MEND  MACRO&lab _SET_PREFIX&lab pea $2009	 jsl $E100B0  MEND  MACRO&lab _GET_PREFIX&lab pea $200A	 jsl $E100B0  MEND  MACRO&lab _CLEAR_BACKUP_BIT&lab pea $200B	 jsl $E100B0  MEND  MACRO&lab _SET_SYS_PREFS&lab pea $200C	 jsl $E100B0  MEND  MACRO&lab _Null&lab pea $200D	 jsl $E100B0  MEND  MACRO&lab _Expand_Path&lab pea $200E	 jsl $E100B0  MEND  MACRO&lab _Get_SYS_PREFS&lab pea $200F	 jsl $E100B0  MEND  MACRO&lab _OPEN&lab pea $2010	 jsl $E100B0  MEND  MACRO&lab _NEWLINE&lab pea $2011	 jsl $E100B0  MEND  MACRO&lab _READ&lab pea $2012	 jsl $E100B0  MEND  MACRO&lab _WRITE&lab pea $2013	 jsl $E100B0  MEND  MACRO&lab _CLOSE&lab pea $2014	 jsl $E100B0  MEND  MACRO&lab _FLUSH&lab pea $2015	 jsl $E100B0  MEND  MACRO&lab _SET_MARK&lab pea $2016	 jsl $E100B0  MEND  MACRO&lab _GET_MARK&lab pea $2017	 jsl $E100B0  MEND  MACRO&lab _SET_EOF&lab pea $2018	 jsl $E100B0  MEND  MACRO&lab _GET_EOF&lab pea $2019	 jsl $E100B0  MEND  MACRO&lab _SET_LEVEL&lab pea $201A	 jsl $E100B0  MEND  MACRO&lab _GET_LEVEL&lab pea $201B	 jsl $E100B0  MEND  MACRO&lab _GET_DIR_ENTRY&lab pea $201C	 jsl $E100B0  MEND  MACRO&lab _Begin_Session&lab pea $201D	 jsl $E100B0  MEND  MACRO&lab _End_Session&lab pea $201E	 jsl $E100B0  MEND  MACRO&lab _Session_Status&lab pea $201F	 jsl $E100B0  MEND  MACRO&lab _GET_DEV_NUM&lab pea $2020	 jsl $E100B0  MEND  MACRO&lab _GET_LAST_DEV&lab pea $2021	 jsl $E100B0  MEND  MACRO&lab _READ_BLOCK&lab pea $2022	 jsl $E100B0  MEND  MACRO&lab _WRITE_BLOCK&lab pea $2023	 jsl $E100B0  MEND  MACRO&lab _FORMAT&lab pea $2024	 jsl $E100B0  MEND  MACRO&lab _ERASE_DISK&lab pea $2025	 jsl $E100B0  MEND  MACRO&lab _Reset_Cache&lab pea $2026	 jsl $E100B0  MEND  MACRO&lab _GETNAME&lab pea $2027	 jsl $E100B0  MEND  MACRO&lab _GET_BOOT_VOL&lab pea $2028	 jsl $E100B0  MEND  MACRO&lab _Quit&lab pea $2029	 jsl $E100B0  MEND  MACRO&lab _GET_VERSION&lab pea $202A	 jsl $E100B0  MEND  MACRO&lab _Get_FST_Info&lab pea $202B	 jsl $E100B0  MEND  MACRO&lab _D_INFO&lab pea $202C	 jsl $E100B0  MEND  MACRO&lab _D_Status&lab pea $202D	 jsl $E100B0  MEND  MACRO&lab _D_Control&lab pea $202E	 jsl $E100B0  MEND  MACRO&lab _D_Read&lab pea $202F	 jsl $E100B0  MEND  MACRO&lab _D_Write&lab pea $2030	 jsl $E100B0  MEND  MACRO&lab _ALLOC_INTERRUPT&lab pea $2031	 jsl $E100B0  MEND  MACRO&lab _DEALLOC_INTERRUPT&lab pea $2032	 jsl $E100B0  MEND  MACRO&lab _Add_Notify_Proc&lab pea $2034	 jsl $E100B0  MEND  MACRO&lab _Del_Notify_Proc&lab pea $2035	 jsl $E100B0  MEND  MACRO&lab _D_Rename&lab pea $2036	 jsl $E100B0  MEND  MACRO&lab _Get_Std_Ref_Num&lab pea $2037	 jsl $E100B0  MEND  MACRO&lab _Get_Ref_Num&lab pea $2038	 jsl $E100B0  MEND  MACRO&lab _Get_Ref_Info&lab pea $2039	 jsl $E100B0  MEND  		MACRO&lab	ChkBugIn &callnum&lab			IF 	(Developing AND &Type('PDOS')­'UNDEFINED ') THEN		lda GSBugging		bne @1		lda >$C025		and #$C0		; -opt		cmp #$C0		bne @2@1		call GSOSBug,in=(#1:w,#0:w,&callnum:w,!pblock:l)@2				ENDIF		MEND		MACRO&lab	ChkBugOut &callnum		&lab			IF (Developing AND &Type('PDOS')­'UNDEFINED ') THEN		php		pha		lda GSBugging		bne @3		lda >$C025		and #$C0		; -opt		cmp #$C0		bne @4@3		call GSOSBug,in=(#0:w,err:w,&callnum:w,!pblock:l)@4		pla		plp		ENDIF		MEND				MACRO &lab 	_BindInt&lab	pea $2031 		jsl $E100B0   		MEND   		MACRO &lab 	_UnBindInt&lab	pea $2032 		jsl $E100B0   		MEND 