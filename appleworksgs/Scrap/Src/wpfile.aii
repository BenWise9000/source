	load	'macros.dump'	include 'driver.equ'	include 'scrap.equ'	IMPORT	X_AWIndent	IMPORT	X_AWLeftMargin	IMPORT	D_AlertBox	IMPORT	X_AsciitoWPScrap	IMPORT	X_BHand	IMPORT	X_BRuler	IMPORT	X_BAttr	IMPORT	D_BeachBall	IMPORT	X_BOffset	IMPORT	X_CantImportStr	IMPORT	D_CurCursor	IMPORT	X_CurrentParRecord	IMPORT	X_DisposeWPScrap	IMPORT	D_GrowHandle	IMPORT	D_GrowLHandle	IMPORT	X_MassageWPScrap	IMPORT	D_Message1	IMPORT	D_Message2	IMPORT	D_MessageThere	IMPORT	D_NeedHand	IMPORT	D_NeedHandle	IMPORT	X_OldCursor	IMPORT	X_PLtoWPScrap	IMPORT	X_ParBlockSize	IMPORT	X_RulerSize	IMPORT	X_SStoPLScrap	IMPORT	X_ScrStdRuler	IMPORT	D_SetCursor	IMPORT	X_StdTabRuler	ENTRY	X_MakeStandardRuler	ENTRY	X_tenthsto80ths;*********************************************************************;;  This file contains -;;	X_SStoWPScrap;	X_MakeStandardRuler;	X_tenthsto80ths - Really to 80ths;;*********************************************************************X_SStoWPScrap	PROC	EXPORT	;Using X_WPFileData	;Using X_TabRulerData	input Src:l	local Dptr:l,Ruler:l,Rptr:l,Intermed:l	output Dest:l	error err	begin	SpaceLong	PushLong Src	jsl X_SStoPLScrap	sta err	PullLong Intermed	jcs mem_err	SpaceLong	PushLong Intermed	jsl X_PLtoWPScrap	sta err	PullLong Dest	jcs mem_err	PushLong Intermed	_DisposeHandle	lda err	bne exit	MoveLong [Dest],Dptr	Addwl #2,Dptr	MoveLong [Dptr]:#X_scpRulerHand,Ruler	MoveLong [Ruler],Rptr	MoveWord [Rptr],X_StdTabRuler	PushLong #X_StdTabRuler	PushLong Rptr	PushLong #X_RulerSize	_BlockMove	bra exitmem_errexit	return err	ENDPX_MakeStandardRuler	PROC	EXPORT	;Using X_WPScrapData	begin	PushLong #Defaults	PushLong #X_ScrStdRuler	PushLong #X_RulerSize	_BlockMove	returnDefaults	DS.B 2	; D_Reserved	DC.W	X_scr_r_left+X_scr_r_single	; status	DC.W	40	; left margin	DC.W	40	; indent margin	DC.W	560	; right margin	DC.W	1	; number of tabs	DC.W	350	; tab location	DC.W	X_scr_rt_left	; tab type	DC.W	0	DC.W	X_scr_rt_left	DC.W	0	DC.W	X_scr_rt_left	DC.W	0	DC.W	X_scr_rt_left	DC.W	0	DC.W	X_scr_rt_left	DC.W	0	DC.W	X_scr_rt_left	DC.W	0	DC.W	X_scr_rt_left	DC.W	0	DC.W	X_scr_rt_left	DC.W	0	DC.W	X_scr_rt_left	DC.W	0	DC.W	X_scr_rt_left	ENDPX_tenthsto80ths	PROC	EXPORT	asl a	asl a	asl a	and #$fffc	rtl	ENDP	END